import Head from "next/head";
import Image from "next/image";
import styles from "../../../../../styles/Home.module.css";
import { useEffect, useState } from "react";
import axios from "axios";
import Footer from "../../../../../components/Footer";
import NextNavbarSimple from "../../../../../components/NavbarSimple";
import router from "next/router";
import { useRouter } from "next/router";
import EditAddressForm from "../../../../../components/EditAddressForm";

export default function AddressEdit() {
  const [user, setUser] = useState(null);
  const router = useRouter();
  const { id } = router.query;
  const { address_id } = router.query;
  const [user_id, setUser_id] = useState(null);
  const [add_id, setAdd_id] = useState(null);
  const [address, setAddress] = useState(null);

  useEffect(() => {
    var temp_id;
    if (id != undefined && id != null) {
      window.localStorage.setItem("user_id", id);
      temp_id = id;
      setUser_id(temp_id);
    } else {
      temp_id = window.localStorage.getItem("user_id");
      setUser_id(temp_id);
    }

    var temp_add_id;
    if (address_id != undefined && address_id != null) {
      window.localStorage.setItem("address_id", address_id);
      temp_add_id = address_id;
      setAdd_id(temp_add_id);
    } else {
      temp_add_id = window.localStorage.getItem("address_id");
      setAdd_id(temp_add_id);
    }

    getUser(setUser);
    getAddress(temp_add_id, setAddress);
  }, []);

  const updateAddressHandler = async (
    body,
    change_default,
    address_default
  ) => {
    updateAddress(address.id, body, setAddress);
    updateAddressDefault(
      address.id,
      change_default,
      address_default,
      address.address_type,
      setAddress
    );
  };

  const deleteAddressHandler = async () => {
    deleteAddress(address.id);
  };

  return user == null || address == null ? (
    <div></div>
  ) : (
    <div className={styles.container}>
      <Head>
        <title>Technology Store</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <NextNavbarSimple user={user == null ? null : user} login={true} />

      <main className={styles.main}>
        <EditAddressForm
          user={user}
          address={address}
          updateAddress={updateAddressHandler}
          createAddress={null}
          deleteAddress={deleteAddressHandler}
        />
      </main>
      <Footer />
    </div>
  );
}

// LINK get User
const getUser = (setUser) => {
  const config = {
    headers: {
      "Content-Type": "application/json",
    },
  };

  const token = window.localStorage.getItem("token");

  config.headers["authorization"] = `Token ${token}`;
  axios.defaults.headers.common["Authorization"];

  const auth_user = "http://127.0.0.1:8000/customer-account/check-auth/";
  axios
    .get(auth_user, config)
    .then((res) => {
      const result = res.data;
      setUser(result);
      return;
    })
    .catch((error) => {
      console.log(error);
    });
};

// LINK get Address
const getAddress = (id, setAddress) => {
  const config = {
    headers: {
      "Content-Type": "application/json",
    },
  };

  const token = window.localStorage.getItem("token");

  config.headers["authorization"] = `Token ${token}`;
  axios.defaults.headers.common["Authorization"];

  const address_url = `http://127.0.0.1:8000/customer-account/manage-address/${id}/`;
  axios
    .get(address_url, config)
    .then((res) => {
      const result = res.data;
      setAddress(result);
      return;
    })
    .catch((error) => {
      console.log(error);
    });
};

// LINK update Address
const updateAddress = async (id, body, setAddress) => {
  const config = {
    headers: {
      "Content-Type": "application/json",
    },
  };

  const token = window.localStorage.getItem("token");

  config.headers["authorization"] = `Token ${token}`;
  axios.defaults.headers.common["Authorization"];

  const address_url = `http://127.0.0.1:8000/customer-account/manage-address/${id}/`;
  axios
    .put(address_url, body, config)
    .then(async (res) => {
      const result = await res.data;
      setAddress(result);
      return;
    })
    .catch((error) => {
      console.log(error);
    });
};

const updateAddressDefault = async (
  id,
  change_default,
  address_default,
  address_type,
  setAddress
) => {
  const config = {
    headers: {
      "Content-Type": "application/json",
    },
  };

  const token = window.localStorage.getItem("token");

  config.headers["authorization"] = `Token ${token}`;
  axios.defaults.headers.common["Authorization"];
  if (change_default) {
    const new_body = JSON.stringify({
      new_default: address_default,
      address_type,
    });
    const address_default_url = `http://127.0.0.1:8000/customer-account/manage-address/create/${id}/`;
    axios
      .put(address_default_url, new_body, config)
      .then(async (new_res) => {
        const new_result = await new_res.data;
        setAddress(new_result);
      })
      .catch((error) => {
        console.log(error);
      });
  }
};

const deleteAddress = async (id) => {
  const config = {
    headers: {
      "Content-Type": "application/json",
    },
  };

  const token = window.localStorage.getItem("token");

  config.headers["authorization"] = `Token ${token}`;
  axios.defaults.headers.common["Authorization"];

  const address_default_url = `http://127.0.0.1:8000/customer-account/manage-address/${id}/`;
  axios
    .delete(address_default_url, config)
    .then(async (res) => {
      const result = await res.data;
    })
    .catch((error) => {
      console.log(error);
    });
};

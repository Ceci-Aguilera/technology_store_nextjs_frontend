import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import axios from "axios";
import NextNavbarSimple from "../../../../components/NavbarSimple";
import ResetPasswordForm from "../../../../components/ResetPasswordForm";

export default function ProductsDetail() {
  const [user, setUser] = useState(null);
  const router = useRouter();
  const { uid } = router.query;
  const { token } = router.query;

  useEffect(() => {
    getUser(setUser);
  }, []);

  const onResetPasswordHandler = async (body) => {
    await onResetPassword(body, uid, token);
  };

  return uid == null ||
    uid == undefined ||
    token == null ||
    token == undefined ? (
    <div></div>
  ) : (
    <div>
      <Head>
        <title>Ecommerce Single Vendor</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <NextNavbarSimple user={user == null ? null : user} login={true} />

      <main>
        <div>
          <ResetPasswordForm onResetPassword={onResetPasswordHandler} />
        </div>
      </main>

      {/* Here goes the Footer */}
    </div>
  );
}

const onResetPassword = async (body, uid, token) => {
  const config = { headers: { "Content-Type": "application/json" } };

  const reset_password_url = `http://127.0.0.1:8000/customer-account/reset-password/${uid}/${token}/`;

  axios
    .post(reset_password_url, body, config)
    .then(async (res) => {
      const resToJson = await res.data;
      router.push("/login");
    })
    .catch((error) => {
      console.log(error);
    });
};

// LINK get User
const getUser = (setUser) => {
  const config = {
    headers: {
      "Content-Type": "application/json",
    },
  };

  const token = window.localStorage.getItem("token");

  config.headers["authorization"] = `Token ${token}`;
  axios.defaults.headers.common["Authorization"];

  const auth_user = "http://127.0.0.1:8000/customer-account/check-auth/";
  axios
    .get(auth_user, config)
    .then((res) => {
      const result = res.data;
      setUser(result);
      return;
    })
    .catch((error) => {
      console.log(error);
    });
};
